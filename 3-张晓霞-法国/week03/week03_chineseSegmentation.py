#week3作业

#词典；每个词后方存储的是其词频，词频仅为示例，不会用到，也可自行修改
Dict = {"经常":0.1,
        "经":0.05,
        "有":0.1,
        "常":0.001,
        "有意见":0.1,
        "歧":0.001,
        "意见":0.2,
        "分歧":0.2,
        "见":0.05,
        "意":0.05,
        "见分歧":0.05,
        "分":0.1}

#待切分文本
sentence = "经常有意见分歧"

#实现全切分函数，输出根据字典能够切分出的所有的切分方式
def all_cut(sentence, Dict):
    target = []
    #如果待切分句子为空字符串，则返回空列表
    if len(sentence) == 0:
        return target
    #从一个字符直到整个sentence
    for idx in range(1, len(sentence) + 1):
        #确定切分结果的第一个word
        word = sentence[0:idx]
        #如果word在Dict中，则继续调用all_cut来处理word之后的字符串
        if word in Dict:
            segments_substr = all_cut(sentence[idx:], Dict)
            #当到达sentence结尾无法再切分时，将[word]加入target中，作为这一种情况的结尾
            if (segments_substr == []) and (len(sentence[idx:]) == 0):
                target.append([word])
            else:
                #将以word为首的所有切分可能加入target
                for seg in segments_substr:
                    seg = [word] + seg
                    target.append(seg)
    return target

#程序输出结果（共14种可能）
[['经', '常', '有', '意', '见', '分', '歧'],
 ['经', '常', '有', '意', '见', '分歧'],
 ['经', '常', '有', '意', '见分歧'],
 ['经', '常', '有', '意见', '分', '歧'],
 ['经', '常', '有', '意见', '分歧'],
 ['经', '常', '有意见', '分', '歧'],
 ['经', '常', '有意见', '分歧'],
 ['经常', '有', '意', '见', '分', '歧'],
 ['经常', '有', '意', '见', '分歧'],
 ['经常', '有', '意', '见分歧'],
 ['经常', '有', '意见', '分', '歧'],
 ['经常', '有', '意见', '分歧'],
 ['经常', '有意见', '分', '歧'],
 ['经常', '有意见', '分歧']]

#目标输出;顺序不重要
#（共14种可能）
target = [
    ['经常', '有意见', '分歧'],
    ['经常', '有意见', '分', '歧'],
    ['经常', '有', '意见', '分歧'],
    ['经常', '有', '意见', '分', '歧'],
    ['经常', '有', '意', '见分歧'],
    ['经常', '有', '意', '见', '分歧'],
    ['经常', '有', '意', '见', '分', '歧'],
    ['经', '常', '有意见', '分歧'],
    ['经', '常', '有意见', '分', '歧'],
    ['经', '常', '有', '意见', '分歧'],
    ['经', '常', '有', '意见', '分', '歧'],
    ['经', '常', '有', '意', '见分歧'],
    ['经', '常', '有', '意', '见', '分歧'],
    ['经', '常', '有', '意', '见', '分', '歧']
]
